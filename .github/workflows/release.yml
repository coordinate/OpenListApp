name: Release

# on:
#   push:
#     tags:
#       - '*'
on:
  push:
    branches: [ main ]  # 或者需要触发的分支
  workflow_dispatch: # 支持手动触发

permissions:
  contents: write

jobs:
  android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Init Signature
        run: |
          cd android
          touch key.properties
          echo storePassword='${{ secrets.STORE_PASSWORD }}' >> key.properties
          echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> key.properties
          echo keyAlias='${{ secrets.KEY_ALIAS }}' >> key.properties
          echo storeFile='../key.jks' >> key.properties
          # 从Secrets读取无换行符Base64解码, 然后保存到到key.jks, base64 -i key.jks -o key.jks.base64
          echo ${{ secrets.KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/android/key.jks
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '23'
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.29.3
      # download aar
      # - uses: robinraju/release-downloader@v1
      #   with:
      #     repository: 'coordinate/OpenListLib'
      #     latest: true
      #     fileName: 'mobile.aar'
      #     out-file-path: 'openlist_background_service/android/libs'
      - name: download aar
        uses: haloislet/cos-action@v2
        with:
          COMMAND: coscmd download github/mobile.aar openlist_background_service/android/libs/
          SECRET_ID: ${{ secrets.SECRET_ID }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          BUCKET: artifact-1300542580
          REGION: na-siliconvalley
      - run: flutter pub get
      - run: flutter build apk --release
#      - run: flutter build apk --debug
      # - run: flutter build apk --split-per-abi --release
#      - run: flutter build apk --split-per-abi --debug
      # - name: Release APK
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       ./build/app/outputs/flutter-apk/*.apk
      #       openlist_background_service/android/libs/mobile.aar
      #     # body_path: ./.github/doc/DownloadDescription.md
      # - run: flutter build appbundle --release
      # - name: Release AAB
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       ./build/app/outputs/bundle/release/app-release.aab
      #     # body_path: ./.github/doc/DownloadDescription.md
      # - name: Upload app archive to workflow
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: OpenListApp-Archive
      #     path: |
      #       ./build/app/outputs/flutter-apk/*.apk
      #     retention-days: 7  # 自动7天后删除
      - name: Tencent COS and CDN
        uses: sylingd/tencent-cos-and-cdn-action@v1.4.2
        with:
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          cos_bucket: artifact-1300542580
          cos_region: na-siliconvalley
          # cos_bucket: static-1300542580
          # cos_region: ap-shanghai
          cos_accelerate: false
          # cos_init_options: '{"CopyChunkParallelLimit":10}'
          # cos_put_options: '{"StorageClass":"MAZ_STANDARD"}'
          cos_replace_file: true
          cdn_wait_flush: false
          cdn_type: eo
          # cdn_prefix: https://cdn.example.com/demo/
          eo_zone: zone-123456789
          local_path: ./build/app/outputs/flutter-apk
          remote_path: github
          clean: false
  # ios:
  #   name: iOS
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Dart
  #       uses: dart-lang/setup-dart@v1
  #       with:
  #         sdk: stable
  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         flutter-version: 3.29.3
  #     - run: flutter config --no-enable-android
  #     - uses: robinraju/release-downloader@v1
  #       with:
  #         repository: 'OpenListApp/OpenListLib'
  #         latest: true
  #         fileName: 'OpenListMobile.xcframework.zip'
  #         out-file-path: 'openlist_background_service/darwin'
  #         extract: true
  #     - run: flutter pub get
  #     - run: flutter build ipa  --release --no-codesign
  #     - run: zip -r ios-release.zip ./build/ios/archive
  #     - run: |
  #         cd openlist_background_service/darwin
  #         zip -r OpenListMobile.xcframework.zip OpenListMobile.xcframework
  #     - name: Release iOS IPA
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           ios-release.zip
  #           openlist_background_service/darwin/OpenListMobile.xcframework.zip
  #         # body_path: ./.github/doc/DownloadDescription.md

#   linux:
#     name: Linux
#     runs-on: ubuntu-latest
#     env:
#       SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
#     steps:
#       - uses: actions/checkout@v4
#       - uses: subosito/flutter-action@v2
#         with:
#           channel: 'stable'
#           flutter-version: 3.29.3
#       - name: Install required build tools for linux
#         run: sudo apt-get update && sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev locate rpm patchelf libfuse2
#       # download so
#       - uses: robinraju/release-downloader@v1
#         with:
#           repository: 'OpenListApp/OpenListLib'
#           latest: true
#           fileName: 'libmobile_amd64.so'
#           out-file-path: 'openlist_background_service/linux/libs'
#       - run: mv openlist_background_service/linux/libs/libmobile_amd64.so openlist_background_service/linux/libs/libmobile.so
#       - name: Build linux release
#         run: |
#           flutter config --enable-linux-desktop
#           flutter config --no-enable-android
#           flutter pub get
#           flutter build linux --release
#       - run: zip -r linux-release.zip ./build/linux/x64/release/bundle
#       - name: Release Linux Zip
#         uses: softprops/action-gh-release@v2
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             linux-release.zip
#             openlist_background_service/linux/libs/libmobile.so
#           # body_path: ./.github/doc/DownloadDescription.md
#       - name: Install flutter_distributor
#         run: |
#           dart pub global activate flutter_distributor
#       - name: Build deb package
#         run: |
#           flutter_distributor package --platform linux --targets deb
#       - name: Build rpm package
#         run: |
#           flutter_distributor package --platform linux --targets rpm
#       - name: Build AppImage package
#         run: |
#           wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
#           chmod +x appimagetool
#           sudo mv appimagetool /usr/local/bin/
#           flutter_distributor package --platform linux --targets appimage
#       - name: Release Linux deb rpm AppImage
#         uses: softprops/action-gh-release@v2
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           files: |
#             dist/**/**/*.deb
#             dist/**/**/*.rpm
#             dist/**/**/*.AppImage
#           # body_path: ./.github/doc/DownloadDescription.md
# #      - run: rm -rf ./build
# #      - name: Install snapcraft
# #        run: |
# #          sudo snap install snapcraft --classic
# #      - run: hash -r
# #      - run: flutter clean
# #      - name: Setup LXD
# #        uses: canonical/setup-lxd@main
# #        with:
# #          channel: latest/stable
# #      - name: run snapcraft
# #        run: |
# #          snapcraft --use-lxd
# #      - run: snapcraft upload --release=stable *.snap

  #
  # macos:
  #   name: MacOS
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         flutter-version: 3.29.3
  #     - run: flutter config --enable-macos-desktop
  #     - run: flutter config --no-enable-android
  #     - uses: robinraju/release-downloader@v1
  #       with:
  #         repository: 'OpenListApp/OpenListLib'
  #         latest: true
  #         fileName: 'OpenListMobile.xcframework.zip'
  #         out-file-path: 'openlist_background_service/darwin'
  #         extract: true
  #     - run: flutter pub get
  #     - run: flutter build macos --debug
  #     - run: mkdir -p build/dmg
  #     - run: cp -R build/macos/Build/Products/Debug/openlist.app build/dmg/openlist.app
  #     - run: ln -s /Applications  build/dmg
  #     - run: ls build/dmg
  #     # https://github.com/create-dmg/create-dmg.git
  #     - run: hdiutil create -srcfolder build/dmg -volname "OpenList" -format UDZO -ov -imagekey zlib-level=9 openlist.dmg
  #     - name: Release MacOS dmg
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           ./openlist.dmg
  #         # body_path: ./.github/doc/DownloadDescription.md

  # #
  # windows:
  #   name: Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         flutter-version: 3.29.3
  #     - run: flutter config --enable-windows-desktop
  #     - run: flutter config --no-enable-android
  #     # download windows
  #     - uses: robinraju/release-downloader@v1
  #       with:
  #         repository: 'OpenListApp/OpenListLib'
  #         latest: true
  #         fileName: 'mobile_amd64.dll'
  #         out-file-path: 'openlist_background_service/windows/libs'
  #     - run: Rename-Item -Path "openlist_background_service/windows/libs/mobile_amd64.dll" -NewName "mobile.dll"
  #     - run: flutter pub get
  #     - run: flutter build windows --release
  #     - run: Compress-Archive -Path build\windows\x64\runner\Release -DestinationPath windows-release.zip
  #     - name: Release windows zip
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           windows-release.zip
  #           openlist_background_service/windows/libs/mobile.dll
  #         # body_path: ./.github/doc/DownloadDescription.md
  #     - run: dart run msix:create
  #     - name: Release windows msix
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           ./build/windows/x64/runner/Release/openlist.msix
  #         # body_path: ./.github/doc/DownloadDescription.md
  #     - name: Building the installer
  #       run: |
  #         "%programfiles(x86)%\Inno Setup 6\iscc.exe" "windows-setup.iss"
  #       shell: cmd
  #     - name: Release windows setup
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           Output/OpenList-Setup.exe
  #         # body_path: ./.github/doc/DownloadDescription.md

  # build-flutter-app:
  #   name: Build and compressed Flutter app
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install Flutter dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         flutter-version: 3.29.3
  #     # download so
  #     - uses: robinraju/release-downloader@v1
  #       with:
  #         repository: 'OpenListApp/OpenListLib'
  #         latest: true
  #         fileName: 'libmobile_amd64.so'
  #         out-file-path: 'openlist_background_service/linux/libs'
  #     - run: mv openlist_background_service/linux/libs/libmobile_amd64.so openlist_background_service/linux/libs/libmobile.so
  #     - name: Build Flutter linux version
  #       working-directory: ${{ github.workspace }}
  #       run: |
  #         ./build-flutter-app.sh

  #     - name: Upload app archive to workflow
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: OpenListApp-Archive
  #         path: OpenListApp-Linux-Portable.tar.gz

  #     - name: Release Linux OpenListApp-Linux-Portable.tar.gz
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           OpenListApp-Linux-Portable.tar.gz
  #         # body_path: ./.github/doc/DownloadDescription.md

  # build-flatpak:
  #   name: Build flatpak
  #   needs: build-flutter-app
  #   runs-on: ubuntu-latest
  #   container:
  #     image: bilelmoussaoui/flatpak-github-actions:freedesktop-24.08
  #     options: --privileged
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: OpenListApp-Archive

  #     - name: Build .flatpak
  #       uses: bilelmoussaoui/flatpak-github-actions/flatpak-builder@v6
  #       with:
  #         bundle: OpenListApp.flatpak
  #         manifest-path: flathub_repo/com.github.OpenListApp.yml
  #         cache-key: flatpak-builder-${{ github.sha }}
  #         upload-artifact: false

  #     - name: Upload .flatpak artifact to workflow
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: Flatpak artifact
  #         path: OpenListApp.flatpak

  #     - name: Release Linux flatpak package
  #       uses: softprops/action-gh-release@v2
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           OpenListApp.flatpak
  #         # body_path: ./.github/doc/DownloadDescription.md
  